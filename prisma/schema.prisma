// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  username String @unique
  email    String @unique
  password String
  fullname String
  role     String

  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now())
  deletedAt DateTime?

  posts Post[]

  comments Comment[]

  @@map("users")
}

model Post {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  // relation
  author   User   @relation(fields: [authorId], references: [id])
  authorId String @db.ObjectId

  // content fields
  title       String
  description String
  content     String
  
  // static fields
  views Int @default(0)
  likes String[] @default([])

  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now())
  deletedAt DateTime?

  comments Comment[]

  @@map("posts")
}

model Comment {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  // relation
  author   User   @relation(fields: [authorId], references: [id])
  authorId String @db.ObjectId

  post   Post   @relation(fields: [postId], references: [id])
  postId String @db.ObjectId

  content String

  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now())
  deletedAt DateTime?

  @@map("comments")
}
